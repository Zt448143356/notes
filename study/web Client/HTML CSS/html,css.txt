HTML:

<h#></h#>			文本标题（h1-h6）
	<h1></h1>
	......
	<h6></h6>

字体：
	<i></i>|<em></em>		倾斜
	<b></b>|<strong></strong>	加粗
	<u></u>				下划线
	
<br/>				空标签，用来设置字体换行
<hr/>				空标签，用来做水平线
<p><p/>				段落标签，用来识别段落的


字符实体：
	&nbsp;			空格
	&lt;&gt;		左右尖括号		
	&copy;			©符号（版权标示）

<div></div>			块元素
<span></span>			行元素


<ul>				无序列表
	<li>列表内容</li>
	<li>列表内容</li>
	<li>列表内容</li>
</ul>


<ol /*start="2"*/>		有序列表
	<li>列表内容</li>
	<li>列表内容</li>
	<li>列表内容</li>
</ol>


<dl>				自定义列表
	<dt>名词</dt>
	<dd>解释</dd>
	<dt>名词</dt>
	<dd>解释</dd>
	<dd>解释</dd>
</dl>

<a href="目标文件路径/连接地址" alt="替换文本"title="提示文本">链接文本/图片</a>		
<a href="#"></a>		空链接

<img src="（最好使用相对路径）" alt="" title=""/>


<table width="600" height="300" border="1" bordercolor="#f00">
	<tr>
		<td>单元格</td>
	</tr>
	<tr>
		<td></td>
	</tr>
</table>
cellspacing="单元格与单元格之间的间距"
cellpadding="单元格与内容之间的空隙"
align="表格水平对齐"  取值：left\right\center
valign="表格垂直对齐"     取值：top\bottom\middle
colspan="所需要合并的单元格的列数"
rowspan="所需要合并的单元格的行数"


表单：
	<form name="表单名称" method="post/get" action="">
	</form>
	action   URL			规定当提交表单时向何处发送表单数据。
	get是用来从服务器上获得数据，而post是用来向服务器上传递数据。出于安全性考虑，建议最好使用post提交数据。
	<input type="text" value="" />		文本框
	<input type="password" />		密码框
	<input type="submit" value="按钮内容"/>	提交按钮
	<input type="reset" value="按钮内容"/>	重置按钮
	<input type="radio" anme="" />		单选框（要保证name相同才为一类，才是单选的情况）
	<input type="checkbox" name="" />	复选框（保证name相同为一组）
	disabled="disabled"			禁用
	checked="checked"			默认选中
	前俩者也可以直接写disabled/checked。
	<input type="button" value="按钮内容" />按钮
	<select>				下拉标签
		<option>下拉选项1</option>
		<option>下拉选项2</option>
		......
	</select>
	<textarea cols="" rows=""></textarea>	多行文本框

H5新加标签：
	<header></header>说明：header元素表示页面中一个内容区块或者整个页面的标题。

	<footer></footer>说明：footer元素表示整个页面或者页面中的一个内容区块的脚注.一般来说，他会包含创作者的姓名、创作日期以及创作者联系信息

	<article></article>说明：article元素表示页面屮的一块与上下文不相关的独立内容，譬如博客屮的一篇文章或者报纸中的一篇文章。

	<asidex/aside>说明：aside元素表示acticle元素的内容之外的，与article元素的内容相关的辅助信息。

	<sectionx/section>说明：section元素表示页面中的一个内容区块，比如章节、页眉、页脚或页面屮的其他重要部分。
	它吋以与hi、h2、h3、h4、h5、h6等元素结合起来使用，标示文档结构。

	<navx/nav>说明：nav元素表示页面屮导航链接的部分，导航条。
	
	<figure></figure>说明：独立流内容<figcaption></figcaption>用在figure中为figure的标题

	<mark></mark>说明：高亮

	
案例：
	<form name="f1" method="post" action="">
	<p>姓名：<input type="text" placeholder="请输入您的姓名" /></p>
	<p>密码：<input type="password" /></p>
	<p>性别：<input type="radio" name="sex" checked />男<input type="radio" name="sex" />女</p>
	<p>爱好：<input type="checkbox" name="hobby" />运动<input type="checkbox" name="hobby" />聊天<input type="checkbox" name="hobby" disabled />玩游戏</p>
	<p>省份：
	<select>				下拉标签
		<option>浙江省</option>
		<option>江苏省</option>
	</select>
	</p>
	<p>个人简介：<textarea cols="50" rows="10"></textarea></p>
	<p><input type="submit" value="登录">&nbsp;<input type="reset" value="重置"></p>
	</form>



CSS:
<link rel="stylesheet" type="text/css" href="路径及全称" />


选择器：
	div{width:300px; height:30px;}		元素选择符/类型选择符				0001
	#id名{width:300px; height:30px;}	ID选择器					0100
	.class名{width:300px; height:30px;}	类选择器					0010
	*{width:300px; height:30px;}		通配符选择器					
	选择符1，选择符2选择符3{属性：属性值}	群组选择器					
	如：div,#ID名,.class名{属性：属性值}(内部的属性和属性值为3者共有)
	选择符1 选择符2{属性：属性值}		包含选择器（选择符1中包含的所有选择符2）
	a:link{属性：属性值;}(超链接的初始状态)	伪类选择器					0010
	a:link,a:visited,a:hover,a:active(注意顺序，错误顺序有时会使超链接的样式失效)
	选择器权重：
	组合选择符为各个选择符权重之和
	高权重选择符的样式会覆盖低权重选择符样式
	相同权重的选择符，遵循就近原则。（那个近就是那个样式）


CSS3选择器：
	1.属性选择器
	E[att]{sRules}
	举例：img[alt]{}说明：找到img中有alt的加后面的属性
	
	E[att="val"]{sRules}
	举例：input[type="submit"]{}说明找到input中type属性等于submit的加上后面的属性
	
	E[att~="val"]{sRules}
	举例：div[class~="layou"]{}
	<div class="layou"></div>
	说明：找到div的class中带有layou的给这个div加上后面的属性。
	
	E[att|="val"]{sRules}
	举例：

	E[att^="val"]{sRules}

	E[att$="val"]{sRules}

文本类属性：
	font-family:字体类型
	语法：{font-family：字体1,字体2,字体3;}
	先找字体1，有显示，没有，找字体2，同理字体3。3也没有就按系统默认字体显示。
	当字体是中文字体是，需要加双引号；
	当英文字体中右空格时，需要加双引号如"Times New Roman"
	当英文字体只有一个单词组成是不加双引号，如：Arial
	中文字体会影响英文字体，把英文字体放前面。
	
	font-size:数值;（px,em）（em默认16px，但是受到父类元素影响，当父类设置为20px时1em=20px）
	
	color:颜色值
	rgb颜色模式：color:rgb(0,204,204)
	rgba颜色模式：color:rgba(0,204,204,0.6)rgb三原色，a表示透明度（0全透明）
	
	font-weight:字体粗度（bolder/bold(主要)/normal（主要）/100-900（100-500正常，600-900加粗））
	
	font-style:oblique/italic/normal(倾斜角度由大到小)

	text-align:left/right/center/justify(justify俩边对齐)

	line-height:normal/数值（单行文本的行高等于容器高时，可以实现垂直居中对齐）（行高大于容器高时，偏下。小于时偏上）

	text-decoration:none/underline/overline/line-through(删除线)
	
	text-indent:数值（可以为正可以为负，只对第一行起作用）

列表属性：
	list-style-type:disc(实心圆)/circle(空心圆)/square(实心方块)/none(无)

	list-style-image:url(使用图片的路劲及全称)

	list-style-position:outside（外边）/inside（里边）

	list-style:none


背景属性：
	background-color:颜色值;
	background-image:url();
	background-repeat:no-repeat/repeat/repeat-x/repeat-y(平铺)
	background-position:值1(水平) 值2（竖直）(也可以用right和top和bottom)
	background:属性1 属性2 属性3
	如：background:#fbfbfb url(...) no-repeat center top


浮动属性：
	float:left/right
	1div块元素数去“块状”换行显示特征，变为行内元素
	2紧贴上一个浮动元素（同方向）或父级元素的表框，如宽度不够将换行显示
	3占据行内元素的空间，导致行内元素围绕显示
	
	可能导致高度塌陷（子元素全部浮动，父元素高度塌陷）
	解决方案：
	1.给父元素添加声明overflow:hidden;
	2.在浮动元素下方添加空div，并加声明：clear:both;height:0;overflow:hidden(或者用font-size:0;来替换overflow:hidden;)


盒模型:
	content（内容）,padding（填充）,border（边框）,margin（边界）
	
	border:
		边框宽度：border-width:
		边框颜色：border-color:
		边框样式：border-style:solid(实线)/dashed(虚线)/dotted(点划线)/double(双线)
		缩写：border:10px; #f00 solid;
	单独定义一边：border-bottom/border-left/border-right/border-top

	padding：
		1.用来调整内容在容器中的位置关系
		2.用来调整子元素咋父元素中的位置关系。padding属性需要添加在父元素上
		3.padding是额外加在元素原有大小上的，如果保证元素大小不变，需要从元素宽或高上减掉后添加的padding属性
	四个值：上 下 左 右（padding:10px 20px 30px 40px;）
	三个值：上 左右 下（padding:10px 20px 30px;）
	俩个值:上下 左右（padding:10px 20px;）
	一个值：四个方向（padding:10px;）
	可以单独设置一个方向填充。如：
	padding-top/padding-left/padding-right/padding-bottom

	margin:
	四个值：上 下 左 右（margin:10px 20px 30px 40px;）
	三个值：上 左右 下（margin:10px 20px 30px;）
	俩个值:上下 左右（margin:10px 20px;）
	一个值：四个方向（margin:10px;）
	可以单独设置一个方向填充。如：
	margin-top/margin-left/margin-right/margin-bottom
	在浏览器中横向居中margin:0 auto;
	
	注意事项：
	1.系统胡为某些元素默认设置margin值或padding值，对此我们会清楚所有的元素的margin和padding值
	css首行代码*{margin:0;padding:0}
	2.相邻兄弟元素在垂直方向上的margin值会出现融合的情况，融合后会取俩个元素里较大的值作为融合后的值
	3.当父级子级元素都设置了margin时，子级的margin值胡传递到父级。解决方案：父级使用overflow:hidden;


文本溢出：
	overflow属性：定义溢出元素内容区的内容胡如何处理

	overflow:visible/hidden/scroll/auto/inherit;
	visible:默认值，内容不会被修剪，会出现在元素框外
	hidden：内容会被修剪，并且其余内容是不可见的
	scroll：内容会被修剪，但是浏览器会显示滚动条（上下左右）
	auto：如果内容被修剪，则浏览器会显示滚动条
	inherit：规定从父元素继承overflow属性的值

	white-space属性：设置如何处理元素内的空白
	
	white-space:normal/pre/nowrap/pre-wrap/pre-line/inherit;
	normal:默认，空白会被浏览器忽略
	pre:空白会被浏览器保留（会超出边框）
	nowrap:文本不会换行，文本会在在同一行上继续，知道遇到<br>标签为止;
	pre-wrap:保留空白符序列，但是正常地进行换行
	pre-line:合并空白符序列，但是保留换行
	inherit:从父元素继承white-space属性值

	text-overflow属性：规定当文本溢出包含元素时发生的事情

	text-overflow:clip/ellipsis
	clip：不显示省略号，而是简单的裁切
	ellipsis：当对象内文本溢出时，显示省略标记

	要实现溢出时产生省略号的效果还需要定义：
	1.容器宽度：width：value;（px，%都可以）
	2.强制文本在一行内显示：white-space：nowrap
	3.溢出内容为隐藏：overflow：hidden
	4.溢出文本显示省略号：text-overflow:ellipsis

	
元素类型：
	块状元素：
	1.div,dl,dt,dd,ol,ul,fieldset,(h1-h6),p,form,hr,iframe,colgroup,col,table,tr,td等
	2.默认情况下，块状元素都会占据一行。
	3.块状元素都可以自定义自己的宽度和高度
	4.块状元素都可以做为其他元素的容器

	行内元素
	1.a,span,i,em,strong,b等
	2.始终以行内逐个进行显示
	3.不能自定义宽高，宽高由内容决定，最小内容单元也会呈现矩形形状
	4。也会遵循盒模型基本规则，可以使用padding等，但个别属性不能正确显示

	可变元素
	applet-java applet
	button-按钮
	del-删除文本
	iframe-inline frame
	ins-插入的文本
	map-图片区块（map）
	object-object对象
	script-客户端脚本


元素类型转化：
	display属性：用于定义建立布局时元素生成的显示框类型
	属性值:none|inline|block|inline-block|list-item|run-in|table|inline-table|table-row-group|table-footer-group|
	table-row|table-colume-group|table-column|table-cell|table-caption|inherit
	
	block:不设置宽度时，宽度撑满一行，支持宽高（相当于元素后加了换行符）
	当元素设置了float属性后，就相当于给该元素加了display:block属性

	inline：多个元素可以在一行并列显示（相当于元素后面删除换行符）
	内容撑开宽度，非独占一行，不支持宽高，代码换行和空格都解析成空格

	inline-block:元素的内容以块状显示，行内的其他元素显示在同一行
	不设置宽度时，内容撑开宽度，非独占一行，支持宽高，代码换行和空格都解析成空格

	none:此元素不会被显示。隐藏元素脱离文档流

	list-item:将元素转换为列表。li的默认类型
	不设置宽高时，宽度撑满一行，独占一行，支持宽高

	大部分块元素display属性默认值为block，其中列表的默认值为list-item

	大部分行内元素的display属性值默认为inline，其中img，input，默认为inline-block

	块级元素(block element)
	div-最常用的块级元素
	dl-和dt-dd搭配使用的块级元素
	form-交互表单
	h1 -h6-大标题
	hr-水平分隔线
	ol-排序表单
	p-段落
	ul-非排序列表
	fieldset-表单字段集
	colgroup-col -表单列分组元素
	table-tr-td  表格及行-单元格

	内联元素(inline element)
	a-锚点
	br-换行
	em-强调
	img-图片
	label -表格标签
	span-常用内联容器，定义文本内区块
	strong-粗体强调
	sub -下标
	sup -上标
	textarea-多行文本输入框
	u-下划线
	b-粗体(不推荐)
	i-斜体
	font -字体设定(不推荐)
	input -输入框


定位锚点：
	position属性：定义建立元素布局的定位机制
	position:static/absolute/relative/fixed;
	static：默认值，没有定位
	absolute：绝对定位：相对于拥有定位属性（relative/absolute/fixed）的最近的父元素定位 如果所有父元素都没有定位属性就相对浏览器窗口定位
	relative：相对定位：相对于自己本身正常的位置定位（保留原位置）
	fixed：相对于浏览器窗口定位（可以一直在浏览器的底端）

	z-index属性：检索或设置对象的层叠顺序
	z-index：auto/number
	auto：默认值，遵循父对象
	number：无单位的数值，可以负值。大的覆盖小的。相同将依据他们在html文档中声明的顺序叠加。后面的覆盖上去。
	仅作用于position属性值为relative/absolute的对象

	锚点链接：是超级链接的一种，又叫命名锚记
	1.给元素定义命名锚记名
	<标记 id="命名锚记名"></标记>
	
	2.命名锚记连接
	<a href="#命名锚记名称"></a>
	

图片整合：
	图片整合技术(CSS Sprites或者精灵图)通过将多个图片融合到一张图里面，然后通过CSS background背景定位技术技巧布局网页背景

	图片整合的优势：
	减少http iss请求数，隐形提升了网站性能
	1.通过图片整合来减少对服务器的请求次数，从而提高页面的加载速度。
	2.通过整合图片来减少图片的体积

	滑动门技术：
	利用css背景图像可层叠性，并允许彼此之上进行滑动来创造一个特殊动态效果。
	（一张图，移动background-position来显示自己要的部分的图片）


宽高自适应：
	1.宽度自适应：元素宽度设置为100%（块元素默认为100%）
	2.元素具备最小高度的自适应	min-height属性：最小高度（可以自动增加）
	ie6浏览器不识别该属性，height属性在ie6里就类似min-height作用
	hack1:min-height:value;_height:value;
	hack2:min-height:value; height:auto!important; height:value;

	max-height:value;
	min-width:value;
	max-width:value;
	ie6不识别

	高度自适应：
	1.元素高度自适应窗口高度
	设置方法：html,body{height:100%;}
	需要自适应的元素；height：100%;
	2.自适应元素高度：
	父元素：height：value；
	需要自适应父元素高度的子元素：height：100%；
	
	height：auto；是根据块内内容自动调节高度
	height：100%；是指其相对于最近且有定义高度的父层的高度来定义高度

浏览器兼容：
	5大浏览器内核：Trident		Gecko		Webkit		Preston		Blink
	1、Trident内核：代表作品是IE，因IE捆绑在Windows中，所以占有极高的份额，又称为IE内核或MSHTML，此内核只能用于Windows平台，且不是开源的。
	代表作品还有腾讯、Maxthon（遨游）、360浏览器等。但由于市场份额比较大，曾经出现脱离了W3C标准的时候，同时IE版本比较多，存在很多的兼容性问题。
	2、Gecko内核：代表作品是Firefox，即火狐浏览器。因火狐是最多的用户，故常被称为firefox内核它是开源的，
	最大优势是跨平台，在Microsoft Windows、Linux、MacOs X等主要操作系统中使用。
	Mozilla是网景公司在第一次浏览器大战败给微软之后创建的。有兴趣的同学可以了解一下浏览器大战
	3、Webkit内核：代表作品是Safari、曾经的Chrome，是开源的项目。
	4、Presto内核：代表作品是Opera，Presto是由Opera Software开发的浏览器排版引擎，它是世界公认最快的渲染速度的引擎。
	在13年之后，Opera宣布加入谷歌阵营，弃用了Presto
	5、Blink内核：由Google和Opera Software开发的浏览器排版引擎，2013年4月发布。现在Chrome内核是Blink。谷歌还开发了自己的JS引擎，V8，使JS运行速度极大地提高了

	1.图片间隙:
	描述：在div中插入图片时，图片会将div下方撑大3px
	hack：将<img>转化为块状元素，操作：<img>添加声明display:block;

	2.双倍浮相（双倍边距）
	ie6及更低版本解析浮动元素时，会错误地把浮向边界加倍显示
	hack：给浮动元素添加声明：display：inline；

	3.默认高度（ie6）
	描述：ie6及更低版本中，部分块元素拥有默认高度（低于18px高度）
	hack1：给元素添加声明：font-size：0；
	hack2：给元素添加声明：overflow：hidden；

	4.按钮默认元素不一致
	hack1：统一大小/（用a标记模拟）
	hack2：在input上写按钮的样式，一定要把input的边框去掉
	hack3：用图片作为按钮的背景图

	5.百分比bug
	描述：ie6及更低版本中，会四舍五入方式计算从而导致50%加50%大于100%的情况
	hack：给右面的浮动元素添加声明：clear：right；

	6.鼠标指针bug
	描述：cursor属性的hand属性值只有ie浏览器识别，其他都不识别该声明，cursor属性的pointer属性值ie6.0以上版本及其他内核浏览器都识别该声明
	hack：如统一某元素鼠标指针形状为手型，应添加声明：cursor：pointer;

	7.透明属性
	ie浏览器写法：filter：alpha（opacity=value）；取值范围1-100
	兼容其他浏览器写法：opacity：value；（value的取值范围0-1）

	
	过滤器（filter）
	1.下划线属性过滤器
	当在一个属性前面增加了一个下划线后，由于符合标准的浏览器不能识别带有下划线的属性而会忽略了这个声明，但是在ie6及更低版本浏览器中会继续解析这个规则
	语法：选择符{_属性：属性值;}

	2.!important关键字过滤器
	它表示所附加的声明具有最高优先级的意思。但由于ie6及更低版本不能识别它，我们可以利用ie6的这个bug作为过滤器来兼容ie6和其他标准浏览器
	语法：选择符{属性：属性值!important;}

	3.*属性过滤器
	当在一个属性前面增加了*后，该属性只能被ie7浏览器识别，其它浏览器忽略该属性的作用
	语法：选择符{*属性：属性值;}


表单表格高级属性
	<fieldest></fieldest>	说明：对表单进行分组
	
	<legend></legend>	说明：在表单上插入一个标题，legend必须是表单内的第一个元素

	<label for="绑定控件的id"></label>说明：点字就可以相当于点控件





















style:
border-radius:50% 40% 30% 10% / 10% 30% 40% 50%;
顺时针：斜杆前是水平方向
	斜杠后是竖直方向
	 
百分比相对于谁：非定位元素相对于父元素，定位元素相对于其相对定位的元素（参考物）
perspective：井深3D使用






<></>
<></>
<></>
<></>
<></>
<></>
<></>
<></>
<></>
<></>
<></>
<></>
<></>
<></>
<></>
<></>
<></>